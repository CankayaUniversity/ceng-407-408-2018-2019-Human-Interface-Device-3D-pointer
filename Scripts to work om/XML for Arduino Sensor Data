# -*- coding: utf-8 -*-
#include
#include

// Enter a MAC address and IP address for your controller below.
// The IP address will be dependent on your local network:
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress ip(192,168,2, 95);

// Initialize the Ethernet server library
// with the IP address and port you want to use
// (port 80 is default for HTTP):
EthernetServer server(80);

void setup()
{
// start the Ethernet connection and the server:
Ethernet.begin(mac, ip);
server.begin();
}

void loop()
{
// listen for incoming clients
EthernetClient client = server.available();
if (client) {
// an http request ends with a blank line
boolean currentLineIsBlank = true;
while (client.connected()) {
if (client.available()) {
char c = client.read();
// if you've gotten to the end of the line (received a newline
// character) and the line is blank, the http request has ended,
// so you can send a reply
if (c == '\n' && currentLineIsBlank) {
client.println("HTTP/1.1 200 OK");
//client.println("Content-Type: text/html");
client.println();
client.print("");
//for (int analogChannel = 0; analogChannel < 6; analogChannel++) {
client.print("");
//////////////////////////////////////////////////////////
client.print("");
client.print("");
client.print("analogChannel0");
client.print("");

client.print("");
client.print("sensor");
client.print("");

client.print("");
client.print("analog");
client.print("");

client.print("");
client.print(analogRead(0));
client.print("");
client.print("");
//////////////////////////////////////////////////////////

client.print("");
client.print("");
client.print("analogChannel1");
client.print("");

client.print("");
client.print("sensor");
client.print("");

client.print("");
client.print("analog");
client.print("");

client.print("");
client.print(analogRead(1));
client.print("");
client.print("");
//////////////////////////////////////////////////////////
client.print("");
break;
}
if (c == '\n') {
// you're starting a new line
currentLineIsBlank = true;
}
else if (c != '\r') {
// you've gotten a character on the current line
currentLineIsBlank = false;
}
}
}
// give the web browser time to receive the data
delay(1);
// close the connection:
client.stop();
}
}
